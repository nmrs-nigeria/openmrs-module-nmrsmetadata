<org.openmrs.module.reporting.dataset.definition.SqlDataSetDefinition id="1" uuid="0ce4ce9f-0098-43b5-8ead-0fd3baf197f9" retired="false">
  <name>ScheduledAppointment</name>
  <description>All patients that have an appointment in a particular reporting period</description>
  <creator id="2" uuid="1c3db49d-440a-11e6-a65c-00e04c680037"/>
  <dateCreated id="3">2019-10-24 04:21:53 UTC</dateCreated>
  <changedBy reference="2"/>
  <dateChanged id="4">2020-11-16 12:29:14 UTC</dateChanged>
  <parameters id="5">
    <org.openmrs.module.reporting.evaluation.parameter.Parameter id="6">
      <name>startDate</name>
      <label>startDate</label>
      <type>java.util.Date</type>
      <required>true</required>
    </org.openmrs.module.reporting.evaluation.parameter.Parameter>
    <org.openmrs.module.reporting.evaluation.parameter.Parameter id="7">
      <name>endDate</name>
      <label>endDate</label>
      <type>java.util.Date</type>
      <required>true</required>
    </org.openmrs.module.reporting.evaluation.parameter.Parameter>
  </parameters>
  <id>219</id>
  <sqlQuery>select&#xd;
pid1.identifier as PepfarID,&#xd;
pid2.identifier as HospID,&#xd;
pn3.given_name as FirstName,&#xd;
pn3.family_name as FamilyName,&#xd;
person.gender as Sex,&#xd;
CONCAT(&quot;+234-&quot;,psn_atr.value) AS PhoneNo,&#xd;
person.birthdate as DOB,&#xd;
TIMESTAMPDIFF(YEAR,person.birthdate,CURDATE()) as Age,&#xd;
patient_program.date_enrolled as EnrollDate&#xd;
,MAX(IF(obsnextapptdate.concept_id=5096,obsnextapptdate.appointment_date, NULL)) as  `NextAppointmentDate`&#xd;
,MAX(IF(obs.concept_id=856,obs.value_numeric, NULL))as `LastViralLoad`&#xd;
,MAX(IF(obs.concept_id=856,@lastViralLoadDate:=obsmax.last_date, @lastViralLoadDate:=NULL)) as `LastViralLoadDate`&#xd;
,MAX(IF(obs.concept_id=165988,DATE_FORMAT(@lastSampleDate:=obs.value_datetime,&apos;%d-%b-%Y&apos;),@lastSampleDate:=null)) as `LastSpecimenCollectionDate`&#xd;
,MAX(IF(biometrictable.patient_Id IS NOT NULL,&apos;Yes&apos;,&apos;No&apos;)) as BiometricCaptured&#xd;
,IF(biometrictable.patient_Id IS NOT NULL,IF(invalidprint.patient_Id IS NOT NULL,&apos;No&apos;,&apos;&apos;),&quot;&quot;) as ValidCapture&#xd;
from patient&#xd;
left join patient_identifier pid1 on(pid1.patient_id=patient.patient_id and pid1.identifier_type=4 and pid1.voided=0)&#xd;
left join patient_identifier pid2 on(pid2.patient_id=patient.patient_id and pid2.identifier_type=5 and pid2.voided=0)&#xd;
left join person_name pn3 on(patient.patient_id=pn3.person_id and pn3.voided=0)&#xd;
left join person on(person.person_id=patient.patient_id)&#xd;
LEFT JOIN person_attribute psn_atr ON (person.person_id=psn_atr.person_id and psn_atr.person_attribute_type_id=8) &#xd;
left join patient_program on(patient_program.patient_id=person.person_id and patient_program.voided=0 and patient_program.program_id=1)&#xd;
LEFT join obs on(obs.person_id=patient.patient_id &#xd;
and obs.concept_id IN (5096,856,165988))&#xd;
left join concept_name cn1 on(obs.value_coded=cn1.concept_id and cn1.locale=&apos;en&apos; and cn1.locale_preferred=1)&#xd;
left join &#xd;
(&#xd;
   select obs.person_id,obs.concept_id, MAX(obs.obs_datetime) as last_date from obs where obs.voided=0 and obs.concept_id IN(5096,856,165988)  &#xd;
   GROUP BY obs.person_id,obs.concept_id&#xd;
) as obsmax on(obs.person_id=obsmax.person_id and &#xd;
obs.concept_id=obsmax.concept_id and obs.obs_datetime=obsmax.last_date)&#xd;
left join&#xd;
(&#xd;
   select &#xd;
   obs.person_id,&#xd;
   obs.concept_id,&#xd;
   obs.obs_datetime,&#xd;
   obs.value_datetime as appointment_date&#xd;
   from&#xd;
   obs where &#xd;
   obs.concept_id=5096 and obs.voided=0 and &#xd;
   obs.value_datetime BETWEEN :startDate and :endDate&#xd;
) as obsnextapptdate &#xd;
on(obsnextapptdate.person_id=patient.patient_id)&#xd;
LEFT JOIN (&#xd;
   select &#xd;
   DISTINCT biometricinfo.patient_Id&#xd;
   from &#xd;
   biometricinfo&#xd;
) as biometrictable &#xd;
on(patient.patient_id=biometrictable.patient_Id and patient.voided=0)&#xd;
LEFT JOIN (&#xd;
   select &#xd;
   DISTINCT biometricinfo.patient_Id&#xd;
   from &#xd;
   biometricinfo where template not like &apos;Rk1S%&apos;&#xd;
) as invalidprint&#xd;
&#xd;
on(patient.patient_id=invalidprint.patient_Id and patient.voided=0)&#xd;
 &#xd;
where &#xd;
patient.voided=0 and obs.voided=0 and &#xd;
obsnextapptdate.appointment_date BETWEEN :startDate and :endDate&#xd;
GROUP BY patient.patient_id,obsnextapptdate.appointment_date;</sqlQuery>
</org.openmrs.module.reporting.dataset.definition.SqlDataSetDefinition>